var testwrapper = require("custom/testUtil/testwrapper"),
    test = testwrapper(),

    underTest = require("./prevNext"),
    arrElements = [{href: "a"}, {href: "b"}, {href: "c"}];

function hrefExtractor(element) {
    return element.href;
}

function matcherNotMatching() {
    return false;
}

function matcherMatchingNth(index) {
    return function(href) {
        return href === arrElements[index].href;
    };
}

test(
    "no match",
    function(t) {
        // given
        var expected =
                {
                    current: null,
                    previous: null,
                    next: null
                },
            actual;

        // when
        actual = underTest(arrElements, hrefExtractor, matcherNotMatching);

        // then
        t.deepEquals(actual, expected);

        t.end();
    }
);

test(
    "current in the middle",
    function(t) {
        // given
        var expected =
                {
                    current: arrElements[1],
                    previous: arrElements[0],
                    next: arrElements[2]
                },
            actual;
        
        // when
        actual = underTest(arrElements, hrefExtractor, matcherMatchingNth(1));
        
        // then
        t.deepEquals(actual, expected);
        
        t.end();
    }
);

test(
    "current at the beginning",
    function(t) {
        // given
        var expected =
                {
                    current: arrElements[0],
                    previous: null,
                    next: arrElements[1]
                },
            actual;

        // when
        actual = underTest(arrElements, hrefExtractor, matcherMatchingNth(0));

        // then
        t.deepEquals(actual, expected);

        t.end();
    }
);

test(
    "current at the end",
    function(t) {
        // given
        var expected =
                {
                    current: arrElements[2],
                    previous: arrElements[1],
                    next: null
                },
            actual;

        // when
        actual = underTest(arrElements, hrefExtractor, matcherMatchingNth(2));

        // then
        t.deepEquals(actual, expected);

        t.end();
    }
);