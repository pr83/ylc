module.exports = getPrevNext;

function getPrevNext(arrElements, fnHrefExtractor, fnCurrentHrefMatcher) {
    var idxMatchingElement = getIndexOfCurrent(arrElements, fnHrefExtractor, fnCurrentHrefMatcher);
    
    if (idxMatchingElement === null) {
        return resultNotMatching();
    } else {
        return result(arrElements, idxMatchingElement);
    }
}

function result(arrElements, idxMatchingElement) {
    return {
        current: arrElements[idxMatchingElement],
        previous: getElementAt(arrElements, idxMatchingElement - 1),
        next: getElementAt(arrElements, idxMatchingElement + 1)
    };
}

function getElementAt(arrElements, index) {
    if (0 <= index && index < arrElements.length) {
        return arrElements[index];
    } else {
        return null;
    }
}

function resultNotMatching() {
    return {
        current: null,
        previous: null,
        next: null
    };
}

function getIndexOfCurrent(arrElements, fnHrefExtractor, fnCurrentHrefMatcher) {
    var idxElement,
        element,
        href;
    
    for (idxElement = 0; idxElement < arrElements.length; idxElement += 1) {
        element = arrElements[idxElement];
        href = fnHrefExtractor(element);
        if (fnCurrentHrefMatcher(href)) {
            return idxElement;
        }
    }
    
    return null;
}